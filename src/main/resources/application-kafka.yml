kafka-configuration:
  producers:
    "[default]":
      props:
        "[bootstrap.servers]": localhost:9092,localhost:9093
        "[batch.size]": 16384
        "[buffer.memory]": 33554432
        "[key.serializer]": org.apache.kafka.common.serialization.StringSerializer
        "[value.serializer]": org.springframework.kafka.support.serializer.JsonSerializer
        "[linger.ms]": 1
        "[acks]": all
        "[default.api.timeout.ms]": 20000
        "[request.timeout.ms]": 20000
        "[auto.offset.reset]": earliest
  consumers:
    "[case-study-consumer]":
      topic: migros.case.study.courier.topic
      error-topic: migros.case.study.courier.topic.error
      error-producer-bean-name: default
      data-class: com.migros.casestudy.domain.event.CourierEvent
      concurrency: 1
      sync-commit: true
      sync-commit-timeout-second: 5
      retry-type: no_retry
      non-blocking-retry:
        include-topics: migros.case.study.courier.topic
        max-attempts: 1
        is-exponential-retry: true
        multiplier: 2
        backoff-interval-millis: 1000
        retry-on-exception: com.migros.casestudy.exception.BaseException
      props:
        "[group.id]": migros.case.study.courier.group
        "[retry-group.id]": migros.case.study.courier.retry.group
        "[bootstrap.servers]": localhost:9092,localhost:9093
        "[max.poll.records]": 500 #for batch listener
        "[max.poll.interval.ms]": 300000 #poll time
        "[session.timeout.ms]": 10000
        "[heartbeat.interval.ms]": 3000
        "[enable.auto.commit]": true
        "[auto.offset.reset]": earliest
        "[fetch.max.bytes]": 52428800
        "[fetch.max.wait.ms]": 500
        "[default.api.timeout.ms]": 20000
        "[request.timeout.ms]": 20000
  topics:
    case-study-consumer-topic: migros.case.study.courier.topic